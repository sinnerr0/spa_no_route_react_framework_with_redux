import PropTypes from 'prop-types';import React, {Component} from 'react';import KeyEvent from '../KeyEvent';export default class GLayer extends Component {    static get defaultProps() {        return {            id: 0,            isShow: true,        };    }    /**     * 레이어     */    constructor() {        super(...arguments);        this.keyEvent = new KeyEvent();    }    /**     * After rendering     */    componentDidMount() {        this.keyEvent.setId(this.props.id);        this.keyEvent.addEventListener();    }    /**     * Invoked before DOM removal     */    componentWillUnmount() {        this.keyEvent.removeEventListener();    }    /**     * @param {Array} keys 레이어에 등록할 키 배열     */    setKeys(keys) {        this.keyEvent.setKeys(keys);    }    setKeyCallback(callback) {        this.keyEvent.setCallback(callback);    }    render() {        this.style = Object.assign({position: 'absolute'}, {display: this.props.isShow ? 'block' : 'none'});        return (            <div style={this.style}>                {this.props.children}            </div>        );    }}GLayer.propTypes = {    id: PropTypes.number,    isShow: PropTypes.bool,};